name: CI_third_party-ZloTrackband

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Run tests with coverage
        run: npm test -- --ci --coverage

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Upload coverage to Codecov
        if: success()
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v3 
        
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
            vercel-token: ${{ secrets.VERCEL_TOKEN }}
            vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
            vercel-org-id: ${{ secrets.TEAM_ID }}
  deploys3:
      runs-on: ubuntu-latest

      steps:
      # 1. Checkout o código do repositório
      - name: Checkout code
        uses: actions/checkout@v3
  
      # 2. Configuração do Node.js para build
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
  
      # 3. Instalar dependências do projeto
      - name: Install dependencies
        run: npm install
  
      # 4. Build do projeto ReactJS
      - name: Build ReactJS project
        run: npm run build
  
      # 5. Deploy para o S3
      - name: Deploy to S3
        uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: --delete
        env:
          AWS_S3_BUCKET: "zlo-third-party-access"
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SOURCE_DIR: "build" # Diretório gerado pelo build do React